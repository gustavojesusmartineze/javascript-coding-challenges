const { fizzBuzz } = require('./fizzBuzz');
const { expect } = require('@jest/globals');

test('print fizzBuzz of 15', () => {
  const number = 15;

  const logSpy = jest.spyOn(console, 'log');

  fizzBuzz(number);
  expect(logSpy).toHaveBeenCalledTimes(15);
  expect(logSpy).toHaveBeenCalledWith('1\n');
  expect(logSpy).toHaveBeenCalledWith('2\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('4\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('7\n');
  expect(logSpy).toHaveBeenCalledWith('8\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('11\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('13\n');
  expect(logSpy).toHaveBeenCalledWith('14\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
});

test('print fizzBuzz of 30', () => {
  const number = 30;

  const logSpy = jest.spyOn(console, 'log');

  fizzBuzz(number);
  expect(logSpy).toHaveBeenCalledTimes(30);
  expect(logSpy).toHaveBeenCalledWith('1\n');
  expect(logSpy).toHaveBeenCalledWith('2\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('4\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('7\n');
  expect(logSpy).toHaveBeenCalledWith('8\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('11\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('13\n');
  expect(logSpy).toHaveBeenCalledWith('14\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('17\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('19\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('22\n');
  expect(logSpy).toHaveBeenCalledWith('23\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('26\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('28\n');
  expect(logSpy).toHaveBeenCalledWith('29\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
});

test('print fizzBuzz of 50', () => {
  const number = 50;

  const logSpy = jest.spyOn(console, 'log');

  fizzBuzz(number);
  expect(logSpy).toHaveBeenCalledTimes(50);
  expect(logSpy).toHaveBeenCalledWith('1\n');
  expect(logSpy).toHaveBeenCalledWith('2\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('4\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('7\n');
  expect(logSpy).toHaveBeenCalledWith('8\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('11\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('13\n');
  expect(logSpy).toHaveBeenCalledWith('14\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('17\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('19\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('22\n');
  expect(logSpy).toHaveBeenCalledWith('23\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('26\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('28\n');
  expect(logSpy).toHaveBeenCalledWith('29\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('31\n');
  expect(logSpy).toHaveBeenCalledWith('32\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('34\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('37\n');
  expect(logSpy).toHaveBeenCalledWith('38\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('41\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('43\n');
  expect(logSpy).toHaveBeenCalledWith('44\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('47\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('49\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
});

test('print fizzBuzz of 100', () => {
  const number = 100;

  const logSpy = jest.spyOn(console, 'log');

  fizzBuzz(number);
  expect(logSpy).toHaveBeenCalledTimes(100);
  expect(logSpy).toHaveBeenCalledWith('1\n');
  expect(logSpy).toHaveBeenCalledWith('2\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('4\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('7\n');
  expect(logSpy).toHaveBeenCalledWith('8\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('11\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('13\n');
  expect(logSpy).toHaveBeenCalledWith('14\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('17\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('19\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('22\n');
  expect(logSpy).toHaveBeenCalledWith('23\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('26\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('28\n');
  expect(logSpy).toHaveBeenCalledWith('29\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('31\n');
  expect(logSpy).toHaveBeenCalledWith('32\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('34\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('37\n');
  expect(logSpy).toHaveBeenCalledWith('38\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('41\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('43\n');
  expect(logSpy).toHaveBeenCalledWith('44\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('47\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('49\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('52\n');
  expect(logSpy).toHaveBeenCalledWith('52\n');
  expect(logSpy).toHaveBeenCalledWith('53\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('56\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('58\n');
  expect(logSpy).toHaveBeenCalledWith('59\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('61\n');
  expect(logSpy).toHaveBeenCalledWith('62\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('64\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('67\n');
  expect(logSpy).toHaveBeenCalledWith('68\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('71\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('73\n');
  expect(logSpy).toHaveBeenCalledWith('74\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('76\n');
  expect(logSpy).toHaveBeenCalledWith('77\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('79\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('82\n');
  expect(logSpy).toHaveBeenCalledWith('83\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('86\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('88\n');
  expect(logSpy).toHaveBeenCalledWith('89\n');
  expect(logSpy).toHaveBeenCalledWith('fizzbuzz\n');
  expect(logSpy).toHaveBeenCalledWith('91\n');
  expect(logSpy).toHaveBeenCalledWith('92\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('94\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('97\n');
  expect(logSpy).toHaveBeenCalledWith('98\n');
  expect(logSpy).toHaveBeenCalledWith('fizz\n');
  expect(logSpy).toHaveBeenCalledWith('buzz\n');
});
